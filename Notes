Certified programming with dependent types


Questions:

  - Dependent types?
  - Certifying program? (for batch mode softwares like compilers, where each run of the program outputs both an answer and a proof that the answer is correct)
  - certifying program + proof checker = certified program
  - HOL logic
  - first order language
  - programs inside of types??
  - monomorphic lambda calculus
  - de bruijn criterion
  - proof terms (in small kernel languages)
  - kernel proof language
  - subset types
  - decision procedures
  - proof by reflection
  - refinement types
  - tactic based theorem proving
  - decidability (Complexity theory)
  - principle types
  - strong normalization
  - relative consistency
  - Zermelo-Fraenkel set theory 
  - strengthening induction hypothesis


Programs check that our programs are correct (Formal program verification)

Dependent Types
Types can contain program that checks properties (Example type of an array might include a program to check out of bounds error)
They capture correctness property in a type
